<!doctype html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://nodexray.github.io/news/article-26795.htm" />
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>Java 超详细讲解ThreadLocal类的使用_java</title>
        <meta name="description" content="目录  Threadlocal有什么用： ThreadLocal使用实例  API介绍 ThreadLocal的使用  Threadlocal 的源码分析  原理 源码  内部类ThreadLocal" />
        <link rel="icon" href="/assets/website/img/nodexray/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="manifest" href="site.webmanifest">
    <!-- CSS here -->
    <link rel="stylesheet" href="/assets/website/css/nodexray/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/nodexray/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/nodexray/slicknav.css">
    <link rel="stylesheet" href="/assets/website/css/nodexray/animate.min.css">
    <link rel="stylesheet" href="/assets/website/css/nodexray/magnific-popup.css">
    <link rel="stylesheet" href="/assets/website/css/nodexray/fontawesome-all.min.css">
    <link rel="stylesheet" href="/assets/website/css/nodexray/themify-icons.css">
    <link rel="stylesheet" href="/assets/website/css/nodexray/slick.css">
    <link rel="stylesheet" href="/assets/website/css/nodexray/nice-select.css">
    <link rel="stylesheet" href="/assets/website/css/nodexray/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-F3L90EJJ0W"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-F3L90EJJ0W');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <header>
        <div class="header-area header-transparent">
            <div class="main-header header-sticky">
                <div class="container-fluid">
                    <div class="row align-items-center">
                        <!-- Logo -->
                        <div class="col-md-3">
                            <div class="logo">
                                <a href="/"><span>Node Xray</span></a>
                            </div>
                        </div>
                        <div class="col-md-9">
                            <div class="menu-wrapper d-flex align-items-center justify-content-end">
                                <!-- Main-menu -->
                                <div class="main-menu d-none d-lg-block">
                                    <nav>
                                        <ul id="navigation">
                                                                                        <li><a href="/">首页</a></li>
                                                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                        <li><a href="/news/">新闻资讯</a></li>
                                                                                        <li><a href="#">关于</a></li>
                                            <li><a href="#">联系</a></li>
                                        </ul>
                                    </nav>
                                </div>
                            </div>
                        </div>
                        <!-- Mobile Menu -->
                        <div class="col-12">
                            <div class="mobile_menu d-block d-lg-none"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <main>
        <!-- Hero Area Start-->
        <div class="slider-area slider-bg2 position-relative">
            <div class="single-slider d-flex align-items-center slider-height2">
                <div class="container">
                    <div class="row">
                        <div class="col-xl-6 col-lg-7 col-md-10">
                            <div class="hero__caption hero__caption2 pt-50">
                                <h1>Java 超详细讲解ThreadLocal类的使用_java</h1>
                                <p>
                                    <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="hero-shape">
                <img src="assets/img/gallery/hero-shape.png" alt="">
            </div>
        </div>
        <!-- Hero Area End -->
        <!-- About -->
        <div class="support-company-area top-padding2">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                          				  				  				<div id="navCategory"> <h5 class="catalogue">目录</h5> <ul class="first_class_ul"> <li><a href="#_label0" rel="nofollow">Threadlocal有什么用：</a></li> <li><a href="#_label1" rel="nofollow">ThreadLocal使用实例</a></li> <ul class="second_class_ul"> <li><a href="#_lab2_1_0" rel="nofollow">API介绍</a></li> <li><a href="#_lab2_1_1" rel="nofollow">ThreadLocal的使用</a></li> </ul> <li><a href="#_label2" rel="nofollow">Threadlocal 的源码分析</a></li> <ul class="second_class_ul"> <li><a href="#_lab2_2_2" rel="nofollow">原理</a></li> <li><a href="#_lab2_2_3" rel="nofollow">源码</a></li> </ul> <li><a href="#_label3" rel="nofollow">内部类ThreadLocalMap</a></li> <ul class="second_class_ul"></ul> <li><a href="#_label4" rel="nofollow">ThreadLocalMap存储位置</a></li> <ul class="second_class_ul"></ul> <li><a href="#_label5" rel="nofollow">Key的弱引用问题</a></li> <ul class="second_class_ul"></ul> <li><a href="#_label6" rel="nofollow">java中的四种引用</a></li> <ul class="second_class_ul"></ul> <li><a href="#_label7" rel="nofollow">总结：</a></li> <ul class="second_class_ul"></ul> </ul> </div> <p class="maodian"><a name="_label0" rel="nofollow"></a></p> <h2>Threadlocal有什么用：</h2> <p>简单的说就是，一个ThreadLocal在一个线程中是共享的，在不同线程之间又是隔离的（每个线程都只能看到自己线程的值）。如下图：</p> <p style="text-align: center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220427/96160fccd817dde5f79876d08ea6caec.jpg" alt="Java 超详细讲解ThreadLocal类的使用_java"></p> <p class="maodian"><a name="_label1" rel="nofollow"></a></p> <h2>ThreadLocal使用实例</h2> <p class="maodian"><a name="_lab2_1_0" rel="nofollow"></a></p> <h3>API介绍</h3> <p>在使用Threadlocal之前我们先看以下它的API：</p> <p style="text-align: center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220427/0ada0e9534837d2f02d95fc6bf8cfef4.jpg" alt="Java 超详细讲解ThreadLocal类的使用_java"></p> <p>ThreadLocal类的API非常的简单，在这里比较重要的就是get()、set()、remove(),set用于赋值操作，get用于获取变量的值，remove就是删除当前变量的值.需要注意的是initialValue方法会在第一次调用时被触发，用于初始化当前变量值，默认情况下initialValue返回的是null。</p> <p class="maodian"><a name="_lab2_1_1" rel="nofollow"></a></p> <h3>ThreadLocal的使用</h3> <p>说完了ThreadLocal类的API了，那我们就来动手实践一下了，来理解前面的那句话：一个ThreadLocal在一个线程中是共享的，在不同线程之间又是隔离的（每个线程都只能看到自己线程的值）</p> <div class="ay1code"> <pre class="brush:java;">  public class ThreadLocalTest {        private static ThreadLocal&lt;Integer&gt; threadLocal = new ThreadLocal&lt;Integer&gt;() {  	// 重写这个方法，可以修改“线程变量”的初始值，默认是null          @Override          protected Integer initialValue() {              return 0;          }      };        public static void main(String[] args) throws InterruptedException {            //一号线程          new Thread(new Runnable() {              @Override              public void run() {                  System.out.println("一号线程set前：" + threadLocal.get());                  threadLocal.set(1);                  System.out.println("一号线程set后：" + threadLocal.get());              }          }).start();            //二号线程          new Thread(new Runnable() {              @Override              public void run() {                  System.out.println("二号线程set前：" + threadLocal.get());                  threadLocal.set(2);                  System.out.println("二号线程set后：" + threadLocal.get());                }          }).start();            //主线程睡1s          Thread.sleep(1000);            //主线程          System.out.println("主线程的threadlocal值：" + threadLocal.get());        }    }    </pre> </div> <p>稍微解释一下上面的代码：</p> <p>每一个ThreadLocal实例就类似于一个变量名，不同的ThreadLocal实例就是不同的变量名，它们内部会存有一个值（暂时这么理解）在后面的描述中所说的“ThreadLocal变量或者是线程变量”代表的就是ThreadLocal类的实例。</p> <p>在类中创建了一个静态的 “ThreadLocal变量”，在主线程中创建两个线程，在这两个线程中分别设置ThreadLocal变量为1和2。然后等待一号和二号线程执行完毕后，在主线程中查看ThreadLocal变量的值。</p> <p>程序结果及分析⌛</p> <p style="text-align: center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220427/7976f87e4de037577fd95ec9bca91770.jpg" alt="Java 超详细讲解ThreadLocal类的使用_java"></p> <p>程序结果重点看的是主线程输出的是0，如果是一个普通变量，在一号线程和二号线程中将普通变量设置为1和2，那么在一二号线程执行完毕后在打印这个变量，输出的值肯定是1或者2（到底输出哪一个由操作系统的线程调度逻辑有关）。但使用ThreadLocal变量通过两个线程赋值后，在主线程程中输出的却是初始值0。在这也就是为什么“一个ThreadLocal在一个线程中是共享的，在不同线程之间又是隔离的”，每个线程都只能看到自己线程的值，这也就是 ThreadLocal的核心作用：实现线程范围的局部变量。</p> <p class="maodian"><a name="_label2" rel="nofollow"></a></p> <h2>Threadlocal 的源码分析</h2> <p class="maodian"><a name="_lab2_2_2" rel="nofollow"></a></p> <h3>原理</h3> <p>每个Thread对象都有一个ThreadLocalMap，当创建一个ThreadLocal的时候，就会将该ThreadLocal对象添加到该Map中，其中键就是ThreadLocal，值可以是任意类型。 这句话刚看可能不是很懂，下面我们一起看完源码就明白了。</p> <p>前面我们的理解是所有的常量值或者是引用类型的引用都是保存在ThreadLocal实例中的，但实际上不是的，这种说法只是让我们更好的理解ThreadLocal变量这个概念。向ThreadLocal存入一个值，实际上是向当前线程对象中的ThreadLocalMap存入值，ThreadLocalMap我们可以简单的理解成一个Map，而向这个Map存值的key就是ThreadLocal实例本身。</p> <p class="maodian"><a name="_lab2_2_3" rel="nofollow"></a></p> <h3>源码</h3> <p style="text-align: center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220427/1353a73ea4fd5338baaa932f84b3a30f.jpg" alt="Java 超详细讲解ThreadLocal类的使用_java"></p> <p>????也就是说，想要存入的ThreadLocal中的数据实际上并没有存到ThreadLocal对象中去，而是以这个ThreadLocal实例作为key存到了当前线程中的一个Map中去了，获取ThreadLocal的值时同样也是这个道理。这也就是为什么ThreadLocal可以实现线程之间隔离的原因了。</p> <p class="maodian"><a name="_label3" rel="nofollow"></a></p> <h2>内部类ThreadLocalMap</h2> <p>ThreadLocalMap是ThreadLocal的内部类，实现了一套自己的Map结构✨</p> <p>ThreadLocalMap属性：</p> <div class="ay1code"> <pre class="brush:java;">          static class Entry extends WeakReference&lt;ThreadLocal&lt;?&gt;&gt; {              Object value;              Entry(ThreadLocal&lt;?&gt; k, Object v) {                  super(k);                  value = v;              }          }          //初始容量16          private static final int INITIAL_CAPACITY = 16;          //散列表          private Entry[] table;          //entry 有效数量           private int size = 0;          //负载因子          private int threshold;   </pre> </div> <p>ThreadLocalMap设置ThreadLocal 变量</p> <div class="ay1code"> <pre class="brush:java;">      private void set(ThreadLocal&lt;?&gt; key, Object value) {              Entry[] tab = table;              int len = tab.length;                            //与运算  &amp; (len-1) 这就是为什么 要求数组len 要求2的n次幂               //因为len减一后最后一个bit是1 与运算计算出来的数值下标 能保证全覆盖               //否者数组有效位会减半               //如果是hashmap 计算完下标后 会增加链表 或红黑树的查找计算量               int i = key.threadLocalHashCode &amp; (len-1);                            // 从下标位置开始向后循环搜索  不会死循环  有扩容因子 必定有空余槽点              for (Entry e = tab[i];   e != null;  e = tab[i = nextIndex(i, len)]) {                  ThreadLocal&lt;?&gt; k = e.get();                  //一种情况 是当前引用 返回值                  if (k == key) {                      e.value = value;                      return;                  }                  //槽点被GC掉 重设状态                   if (k == null) {                      replaceStaleEntry(key, value, i);                      return;                  }              }  			//槽点为空 设置value              tab[i] = new Entry(key, value);              //设置ThreadLocal数量              int sz = ++size;  			  			//没有可清理的槽点 并且数量大于负载因子 rehash              if (!cleanSomeSlots(i, sz) &amp;&amp; sz &gt;= threshold)                  rehash();          }  </pre> </div> <p>ThreadLocalMap属性介绍????：</p> <ul> <li>和普通Hashmap类似存储在一个数组内，但与hashmap使用的拉链法解决散列冲突不同的是 ThreadLocalMap使用开放地址法</li> <li>数组 初始容量16，负载因子2/3</li> <li>node节点 的key封装了WeakReference 用于回收</li> </ul> <p class="maodian"><a name="_label4" rel="nofollow"></a></p> <h2>ThreadLocalMap存储位置</h2> <p>储存在Thread中，有两个ThreadLocalMap变量</p> <p style="text-align: center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220427/493da22b44e7b8b43b0dc25fd71e9dff.jpg" alt="Java 超详细讲解ThreadLocal类的使用_java"></p> <p>threadLocals 在ThreadLocal对象方法set中去创建 也由ThreadLocal来维护</p> <div class="ay1code"> <pre class="brush:java;">      public void set(T value) {          Thread t = Thread.currentThread();          ThreadLocalMap map = getMap(t);          if (map != null)              map.set(this, value);          else              createMap(t, value);      }        void createMap(Thread t, T firstValue) {          t.threadLocals = new ThreadLocalMap(this, firstValue);      }  </pre> </div> <p>inheritableThreadLocals 和ThreadLocal类似 InheritableThreadLocal重写了createMap方法</p> <div class="ay1code"> <pre class="brush:java;">  void createMap(Thread t, T firstValue) {          t.inheritableThreadLocals = new ThreadLocalMap(this, firstValue);      }  </pre> </div> <p>inheritableThreadLocals 作用是将ThreadLocalMap传递给子线程</p> <p style="text-align: center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220427/6a8bc7246f93f9e8e75691adca23dc18.jpg" alt="Java 超详细讲解ThreadLocal类的使用_java"></p> <p>init方法中 条件满足后直接为子线程创建ThreadLocalMap</p> <p style="text-align: center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220427/25493e860f2e673bf444bce2cab6b84b.jpg" alt="Java 超详细讲解ThreadLocal类的使用_java"></p> <p>注意：</p> <ul> <li>仅在初始化子线程的时候会传递 中途改变副线程的inheritableThreadLocals 变量 不会将影响结果传递到子线程 。</li> <li>使用线程池要注意 线程不回收 尽量避免使用父线程的inheritableThreadLocals 导致错误</li> </ul> <p class="maodian"><a name="_label5" rel="nofollow"></a></p> <h2>Key的弱引用问题</h2> <p>为什么要用弱引用,官方是这样回答的</p> <p>To help deal with very large and long-lived usages, the hash table entries use WeakReferences for keys.</p> <p>为了处理非常大和生命周期非常长的线程，哈希表使用弱引用作为 key。</p> <p>生命周期长的线程可以理解为：线程池的核心线程</p> <p>ThreadLocal在没有外部对象强引用时如Thread，发生GC时弱引用Key会被回收，而Value是强引用不会回收，如果创建ThreadLocal的线程一直持续运行如线程池中的线程，那么这个Entry对象中的value就有可能一直得不到回收，发生内存泄露。</p> <ul> <li>key 使用强引用????： 引用的ThreadLocal的对象被回收了，但是ThreadLocalMap还持有ThreadLocal的强引用，如果没有手动删除，ThreadLocal不会被回收，导致Entry内存泄漏。</li> <li>key 使用弱引用????： 引用的ThreadLocal的对象被回收了，由于ThreadLocalMap持有ThreadLocal的弱引用，即使没有手动删除，ThreadLocal也会被回收。value在下一次ThreadLocalMap调用set,get，remove的时候会被清除。</li> </ul> <p>Java8中已经做了一些优化如，在ThreadLocal的get()、set()、remove()方法调用的时候会清除掉线程ThreadLocalMap中所有Entry中Key为null的Value，并将整个Entry设置为null，利于下次内存回收。</p> <p class="maodian"><a name="_label6" rel="nofollow"></a></p> <h2>java中的四种引用</h2> <ul> <li>强引用????： 如果一个对象具有强引用，它就不会被垃圾回收器回收。即使当前内存空间不足，JVM也不会回收它，而是抛出 OutOfMemoryError 错误，使程序异常终止。如果想中断强引用和某个对象之间的关联，可以显式地将引用赋值为null，这样一来的话，JVM在合适的时间就会回收该对象</li> <li>软引用????： 在使用软引用时，如果内存的空间足够，软引用就能继续被使用，而不会被垃圾回收器回收，只有在内存不足时，软引用才会被垃圾回收器回收。（软引用可用来实现内存敏感的高速缓存,比如网页缓存、图片缓存等。使用软引用能防止内存泄露，增强程序的健壮性）</li> <li>弱引用????： 具有弱引用的对象拥有的生命周期更短暂。因为当 JVM 进行垃圾回收，一旦发现弱引用对象，无论当前内存空间是否充足，都会将弱引用回收。不过由于垃圾回收器是一个优先级较低的线程，所以并不一定能迅速发现弱引用对象</li> <li>虚引用????： 虚引用并不会决定对象的生命周期。如果一个对象仅持有虚引用，那么它就和没有任何引用一样，在任何时候都可能被垃圾回收器回收。虚引用必须和引用队列（ReferenceQueue）联合使用。当垃圾回收器准备回收一个对象时，如果发现它还有虚引用，就会在回收对象的内存之前，把这个虚引用加入到与之关联的引用队列中。（注意哦，其它引用是被JVM回收后才被传入ReferenceQueue中的。由于这个机制，所以虚引用大多被用于引用销毁前的处理工作。可以使用在对象销毁前的一些操作，比如说资源释放等。）</li> </ul> <p>通常ThreadLocalMap的生命周期跟Thread（注意线程池中的Thread）一样长，如果没有手动删除对应key（线程使用结束归还给线程池了，其中的KV不再被使用但又不会GC回收，可认为是内存泄漏），一定会导致内存泄漏，但是使用弱引用可以多一层保障：弱引用ThreadLocal会被GC回收，不会内存泄漏，对应的value在下一次ThreadLocalMap调用set,get,remove的时候会被清除，Java8已经做了上面的代码优化。</p> <p class="maodian"><a name="_label7" rel="nofollow"></a></p> <h2>总结：</h2> <p>ThreadLocal的作用： 实现线程范围内的局部变量，即ThreadLocal在一个线程中是共享的，在不同线程之间是隔离的。</p> <p>ThreadLocal的原理： ThreadLocal存入值时使用当前ThreadLocal实例作为key（并不是以当前线程对象作为key），存入当前线程对象中的Map中去。最开始在看源码之前，我以为是以当前线程对象作为key将对象存入到ThreadLocal中的Map中去…</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-26318.htm">哈尔滨农大动物医院哪个大夫好 哈尔滨农大动物医院哪个大夫好些</a></p>
                                        <p>下一个：<a href="/news/article-26797.htm">厦门哪里领养宠物（厦门有没有领养宠物）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-20345.htm" title="胡萝卜的做法（胡萝卜的做法大全家常菜视频）">胡萝卜的做法（胡萝卜的做法大全家常菜视频）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-16-latest-winxray-node.htm" title="「9月16日」最高速度22.5M/S，2024年Xray Node每天更新免费机场订阅节点链接">「9月16日」最高速度22.5M/S，2024年Xray Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-3-winxray-node-github.htm" title="「9月3日」最高速度20.9M/S，2024年Xray Node每天更新免费机场订阅节点链接">「9月3日」最高速度20.9M/S，2024年Xray Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-10-latest-winxray-node.htm" title="「10月10日」最高速度20M/S，2024年Xray Node每天更新免费机场订阅节点链接">「10月10日」最高速度20M/S，2024年Xray Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-20-node-share-links.htm" title="「11月20日」最高速度18.3M/S，2024年Xray Node每天更新免费机场订阅节点链接">「11月20日」最高速度18.3M/S，2024年Xray Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-21-free-high-speed-nodes.htm" title="「9月21日」最高速度19.2M/S，2024年Xray Node每天更新免费机场订阅节点链接">「9月21日」最高速度19.2M/S，2024年Xray Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-26-winxray-github.htm" title="「10月26日」最高速度19.7M/S，2024年Xray Node每天更新免费机场订阅节点链接">「10月26日」最高速度19.7M/S，2024年Xray Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-7-node-share.htm" title="「11月7日」最高速度18.7M/S，2024年Xray Node每天更新免费机场订阅节点链接">「11月7日」最高速度18.7M/S，2024年Xray Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-19-free-high-speed-nodes.htm" title="「11月19日」最高速度18.8M/S，2024年Xray Node每天更新免费机场订阅节点链接">「11月19日」最高速度18.8M/S，2024年Xray Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-24018.htm" title="es修改字段text类型为date类型">es修改字段text类型为date类型</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">48</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">12</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
        <!-- About Area End-->
    </main>
        <footer>
        <div class="footer-wrapper">
            <!-- footer-bottom area -->
            <div class="footer-bottom-area">
                <div class="container">
                    <div class="footer-border">
                        <div class="row">
                            <div class="col-xl-12 ">
                                <div class="footer-copy-right text-center">
                                    <p>
                                    Node Xray机场节点官网 版权所有
                                    <br />
                                    Powered by WordPress
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <!-- Scroll Up -->
    <div id="back-top">
        <a title="Go to Top" href="#"> <i class="fas fa-level-up-alt"></i></a>
    </div>
    <!-- JS here -->
    <!-- Jquery, Popper, Bootstrap -->
    <script src="/assets/website/js/frontend/nodexray/vendor/modernizr-3.5.0.min.js"></script>
    <script src="/assets/website/js/frontend/nodexray/vendor/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/nodexray/popper.min.js"></script>
    <script src="/assets/website/js/frontend/nodexray/bootstrap.min.js"></script>
    <!-- Jquery Slick , Owl-Carousel Plugins -->
    <script src="/assets/website/js/frontend/nodexray/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/nodexray/slick.min.js"></script>
    <!-- wow, Mobile Menu -->
    <script src="/assets/website/js/frontend/nodexray/wow.min.js"></script>
    <script src="/assets/website/js/frontend/nodexray/jquery.magnific-popup.js"></script>
    <script src="/assets/website/js/frontend/nodexray/jquery.slicknav.min.js"></script>
    <!-- counter , waypoint ,Nice-select -->
    <script src="/assets/website/js/frontend/nodexray/jquery.counterup.min.js"></script>
    <script src="/assets/website/js/frontend/nodexray/waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/nodexray/jquery.nice-select.min.js"></script>
    <!-- contact js -->
    <script src="/assets/website/js/frontend/nodexray/contact.js"></script>
    <script src="/assets/website/js/frontend/nodexray/jquery.form.js"></script>
    <script src="/assets/website/js/frontend/nodexray/jquery.validate.min.js"></script>
    <script src="/assets/website/js/frontend/nodexray/mail-script.js"></script>
    <script src="/assets/website/js/frontend/nodexray/jquery.ajaxchimp.min.js"></script>
    <!-- Plugins, main-Jquery -->
    <script src="/assets/website/js/frontend/nodexray/plugins.js"></script>
    <script src="/assets/website/js/frontend/nodexray/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>